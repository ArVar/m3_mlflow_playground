version: "3.8"

x-build-args: &build_args
  INSTALL_PYTHON_VERSION: "3.11"
  MLFLOW_VERSION: "2.8.0"

services:
  minio:
    restart: always
    image: minio/minio:latest
    container_name: mlflow_s3
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ':9001' --address ':9000'
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data

  db:
    restart: always
    image: mariadb:latest
    container_name: mlflow_db
    ports:
      - "3306:3306"
    environment:
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - mlflow_dbdata:/var/lib/mariadb

  minio-client:
    image: minio/mc:latest
    depends_on:
      - minio
    container_name: mlflow_mc
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c " 
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 ${MINIO_ACCESS_KEY_ID} ${MINIO_SECRET_ACCESS_KEY};
      /usr/bin/mc mb minio/mlflow;
      exit 0;
      "

  mlflow:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        <<: *build_args
    image: mlflow_server
    container_name: mlflow_server
    depends_on:
      - minio-client
      - db
    ports:
      - 5000:5000
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
    command: >
      mlflow server --app-name basic-auth
      --backend-store-uri mysql+pymysql://${MARIADB_USER}:${MARIADB_PASSWORD}@db:3306/${MARIADB_DATABASE}
      --default-artifact-root s3://mlflow/ --host 0.0.0.0

volumes:
  mlflow_dbdata:
  minio_data:
